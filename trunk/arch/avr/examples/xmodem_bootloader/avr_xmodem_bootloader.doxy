/* =============================================================================

   Copyright (c) 2009 Pieter Conradie <pieterconradie@users.berlios.de>
   All rights reserved.

   Redistribution and use in source and binary forms, with or without
   modification, are permitted provided that the following conditions are met:

   * Redistributions of source code must retain the above copyright
     notice, this list of conditions and the following disclaimer.

   * Redistributions in binary form must reproduce the above copyright
     notice, this list of conditions and the following disclaimer in
     the documentation and/or other materials provided with the
     distribution.

   * Neither the name of the copyright holders nor the names of
     contributors may be used to endorse or promote products derived
     from this software without specific prior written permission.

   THIS SOFTWARE IS PROVIDED BY THE COPYRIGHT HOLDERS AND CONTRIBUTORS "AS IS"
   AND ANY EXPRESS OR IMPLIED WARRANTIES, INCLUDING, BUT NOT LIMITED TO, THE
   IMPLIED WARRANTIES OF MERCHANTABILITY AND FITNESS FOR A PARTICULAR PURPOSE
   ARE DISCLAIMED. IN NO EVENT SHALL THE COPYRIGHT OWNER OR CONTRIBUTORS BE
   LIABLE FOR ANY DIRECT, INDIRECT, INCIDENTAL, SPECIAL, EXEMPLARY, OR
   CONSEQUENTIAL DAMAGES (INCLUDING, BUT NOT LIMITED TO, PROCUREMENT OF
   SUBSTITUTE GOODS OR SERVICES; LOSS OF USE, DATA, OR PROFITS; OR BUSINESS
   INTERRUPTION) HOWEVER CAUSED AND ON ANY THEORY OF LIABILITY, WHETHER IN
   CONTRACT, STRICT LIABILITY, OR TORT (INCLUDING NEGLIGENCE OR OTHERWISE)
   ARISING IN ANY WAY OUT OF THE USE OF THIS SOFTWARE, EVEN IF ADVISED OF THE
   POSSIBILITY OF SUCH DAMAGE.

============================================================================= */

/** 
 * @ingroup AVR_EXAMPLES
 * @defgroup AVR_XMODEM_BOOTLOADER /xmodem_bootloader
 * 
 * This is an example of how to implement a bootloader on the Atmel AVR.
 * 
 * @par How to use the XMODEM-CRC bootloader
 * 
 * 1. Compile and link the firmware application and generate a @b binary programming
 * file (not Intel HEX!)
 * 
 * <em>Use "arch/avr/tutorials/01_Port_IO/PortIO.bin" distributed with the set of tutorials
 * as a first test.</em>
 * 
 * 2. Create a new HyperTerminal serial port session, configured to 115200 BAUD,
 * 8 Data Bits, No Parity, 1 Stop Bit, No Flow Control.
 * 
 * <em>At this stage you should verify that the communication between HyperTerminal
 * and the board is OK, by powering and/or resetting the board and verifying that
 * HyperTerminal displays at least one received "C" character.</em>
 * 
 * 3. Select "Transfer > Send File ... ". Select "Protocol > Xmodem". Select your
 * application file. The screen should look similar to image:
 * 
 * @image html avr_hyperterminal.jpg "HyperTerminal"
 * 
 * 3. Select "Send".
 * 
 * <em>HyperTerminal will now wait for a 'C' character from the board to start the
 * transfer.</em>
 * 
 * 5. Power and/or reset the board to start the transfer.
 * 
 * <em>If the transfer is successful, the HyperTerminal dialog window will disappear.
 * The bootloader automatically jumps to the start of the application at address
 * 0x0000.</em>
 * 
 * @par Final Note:
 * 
 * The AVR fuse bits must be set so that execution starts from the boot vector
 * address. This means that the bootloader will always be executed first. 
 * The bootloader sends a 'C' character to start a transfer and waits for 1 
 * second for a valid XMODEM-CRC data packet. If the transfer is not successful,
 * it will jump to address 0x0000 and execute the application.
 * 
 */

